<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grapple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_basicBullet</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attached.energy = 100;
attached.image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = -8;
if(distance_to_point(attached.x,attached.y) &lt; 12)
{
    instance_destroy();
}
else
{
    direction = point_direction(attached.x,attached.y,x,y);
    alarm[0] = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(attached.hp&lt;=0 )
{
    attached.image_index=0;
    instance_destroy();
}

attached.energy = 100 - 0.5 * distance_to_point(attached.x,attached.y);
if(attached.energy &lt; 0)
    attached.energy = 0;

if(attached.attached.player=1)
{
    if (attached.energy &lt;= 0 || (isLeft &amp;&amp; not mouse_check_button(mb_left)) || (!isLeft &amp;&amp; not mouse_check_button(mb_right)))
    {
        attack = 0;
        alarm[0] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = attached.depth;
image_angle = direction;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockJunk">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.hp&gt;0)
{
    if(bbox_left-other.bbox_right&gt;16)
    {
        x=other.bbox_right;
    }
    if(bbox_right-other.bbox_left&lt;-16)
    {
        x=other.bbox_left;
    }
    if(bbox_top-other.bbox_bottom&gt;16)
    {
        y=other.bbox_bottom;
    }
    if(bbox_bottom-other.bbox_top&lt;-16)
    {
        y=other.bbox_top;
    }
    
    if(attack&gt;8)
    {
        sound_play(snd_break);
        
        j=instance_create(x,y,obj_debris);
        j.sprite_index=spr_item;
        j.image_index=random(8);
        j.direction=direction;
        j.speed=-0.1*speed;
        j.image_blend=make_colour_hsv(random(255), random(255), random(255));
        j.image_speed=0;
    }
} 

alarm[0]=1; // Destroy Bullet
speed=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockBreakable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( attack &gt; 0)
{
    other.hp-=0.1*attack;
    if(other.hp&gt;0)
    {
    
        other.image_index=ceil(0.03*(100-other.hp));
        
        speed = 0;
        
        if(bbox_left-other.bbox_right&gt;16)
        {
            x=other.bbox_right;
        }
        if(bbox_right-other.bbox_left&lt;-16)
        {
            x=other.bbox_left;
        }
        if(bbox_top-other.bbox_bottom&gt;16)
        {
            y=other.bbox_bottom;
        }
        if(bbox_bottom-other.bbox_top&lt;-16)
        {
            y=other.bbox_top;
        }
        
        direction = point_direction(attached.x,attached.y,x,y);
        
        attached.attached.vlaunchSpeed+=0.015*(distance_to_object(attached.attached))*-sin(degtorad(direction));
        attached.attached.hlaunchSpeed-=0.015*(distance_to_object(attached.attached))*-cos(degtorad(direction));
        attached.attached.vlaunchSpeed*=(0.95);
    } 
    else 
    {
        with(other) instance_destroy();
        sound_play(snd_break);
        
        attached.image_index=0;
        attack = 0;
        alarm[0] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( attack &gt; 0)
{
    speed = 0;
    
    //x=(other.bbox_left + other.bbox_right) / 2;
    //y=(other.bbox_top + other.bbox_bottom) / 2;
        
    if(bbox_left-other.bbox_right&gt;16)
    {
        x=other.bbox_right;
    }
    if(bbox_right-other.bbox_left&lt;-16)
    {
        x=other.bbox_left;
    }
    if(bbox_top-other.bbox_bottom&gt;16)
    {
        y=other.bbox_bottom;
    }
    if(bbox_bottom-other.bbox_top&lt;-16)
    {
        y=other.bbox_top;
    }
    
    direction = point_direction(attached.x,attached.y,x,y);
    
    attached.attached.vlaunchSpeed+=0.015*(distance_to_object(attached.attached))*-sin(degtorad(direction));
    attached.attached.hlaunchSpeed-=0.015*(distance_to_object(attached.attached))*-cos(degtorad(direction));
    attached.attached.vlaunchSpeed*=(0.95);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_basicBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(id&lt;other.id &amp;&amp; speed&gt;0 &amp;&amp; team=other.team)
{
    if(abs(hspeed)&gt;abs(vspeed))
    {
        if(hspeed&gt;0)
        {
            x=other.bbox_left+(bbox_right-bbox_left);
        } else x=other.bbox_right+(bbox_left-bbox_right);
    }
    else
    {
        if(vspeed&gt;0)
        {
            y=other.bbox_bottom+(bbox_top-bbox_bottom);
        } else y=other.bbox_top+(bbox_bottom-bbox_top);
    }
}
if(team!=other.team)
{
    if(abs(attack-other.attack)&lt;5)
    {
        alarm[0]=1;
        other.alarm[0]=1;
        sound_play(snd_hit2);
    }
    else if(attack&lt;other.attack)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Rope

draw_set_colour(c_black);
draw_line_width(attached.x+2*cos(degtorad(attached.direction)),attached.y-2*sin(degtorad(attached.direction)),x,y,5);
draw_set_colour(c_dkgray);
draw_line_width(attached.x+2*cos(degtorad(attached.direction)),attached.y-2*sin(degtorad(attached.direction)),x,y,3);
draw_set_colour(c_ltgray);
draw_line_width(attached.x+2*cos(degtorad(attached.direction)),attached.y-2*sin(degtorad(attached.direction)),x,y,1);

// Draw Hook
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
