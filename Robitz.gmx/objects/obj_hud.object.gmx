<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw HUD

//-------------------------------------------------------------
//                          Actual HUD
//  HUD Template:       X=0                     Y=384
//  Temperature Gauge:  X=129,49,209            Y=432,410,455
//  Health Monitor:     X=                      Y=
//  Energy Bar:         X(+11)=402,418,434,450  Y=360-446
//  Console:            X=                      Y=
//
//-------------------------------------------------------------

draw_set_alpha(1);

//============================== Player 1 ===================================
if (hudBody.player=1)

{
    draw_set_color(c_dkgray);
    {
        draw_rectangle(0+view_xview[view_current],352+view_yview[view_current],view_xview[view_current]+view_wview[view_current],480+view_yview[view_current],false);
    }
    draw_set_color(c_white);
    
    //-------------------------------------------------------------
    //                   Temperature Gauge
    //-------------------------------------------------------------
    
    
    if(hudHead.hp&gt;0)
    {
    
        // ----------- Body -------------
        if(hudBody.hp&gt;0)
        {
            if(hudBody.temperature&gt;=hudBody.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,129+view_xview[view_current],432+view_yview[view_current],1.4,1.4,random(10),c_white,1);
            }
            else if(hudBody.temperature&lt;=hudBody.freezingPoint)
            {
                draw_sprite_ext(spr_dial,0,129+view_xview[view_current],432+view_yview[view_current],1.4,1.4,180-random(2),c_white,1);
            }
            else
            {
                if(hudBody.temperature&gt;0)
                    draw_sprite_ext(spr_dial,0,129+view_xview[view_current],432+view_yview[view_current],1.4,1.4,90*(1-hudBody.temperature/hudBody.meltingPoint),c_white,1);
                else
                    draw_sprite_ext(spr_dial,0,129+view_xview[view_current],432+view_yview[view_current],1.4,1.4,90*(1+hudBody.temperature/hudBody.freezingPoint),c_white,1);
            }
        }
        else //No Body
        {
                draw_sprite_ext(spr_dial,0,129+view_xview[view_current],432+view_yview[view_current],1.4,1.4,180,c_white,1);
        }
        
        // ----------- Head -------------
        if(hudHead.hp&gt;0)//Redundant as there is no Hud without a Head... Here for completeness
        {
            if(hudHead.temperature&gt;=hudHead.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,49+view_xview[view_current],410+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else if(hudHead.temperature&lt;=hudHead.freezingPoint)
            {
                draw_sprite_ext(spr_dial,0,49+view_xview[view_current],410+view_yview[view_current],1,1,180-random(2),c_white,1);
            }
            else
            {
                if(hudHead.temperature&gt;0)
                    draw_sprite_ext(spr_dial,0,49+view_xview[view_current],410+view_yview[view_current],1,1,90*(1-hudHead.temperature/hudHead.meltingPoint),c_white,1);
                else
                    draw_sprite_ext(spr_dial,0,49+view_xview[view_current],410+view_yview[view_current],1,1,90*(1+hudHead.temperature/hudHead.freezingPoint),c_white,1);
            }
        }
        else //No Head
        {
            draw_sprite_ext(spr_dial,0,49+view_xview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        }
        
        // ----------- Leg -------------
        if(hudLeg.hp&gt;0)
        {
            if(hudLeg.temperature&gt;=hudLeg.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,49+view_xview[view_current],455+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else if(hudLeg.temperature&lt;=hudLeg.freezingPoint)
            {
                draw_sprite_ext(spr_dial,0,49+view_xview[view_current],455+view_yview[view_current],1,1,180-random(2),c_white,1);
            }
            else
            {
                if(hudLeg.temperature&gt;0)
                    draw_sprite_ext(spr_dial,0,49+view_xview[view_current],455+view_yview[view_current],1,1,90*(1-hudLeg.temperature/hudLeg.meltingPoint),c_white,1);
                else
                    draw_sprite_ext(spr_dial,0,49+view_xview[view_current],455+view_yview[view_current],1,1,90*(1+hudLeg.temperature/hudLeg.freezingPoint),c_white,1);
            }
        }
        else
        {
            draw_sprite_ext(spr_dial,0,49+view_xview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        }
        
        // ----------- Left Arm -------------
        if(hudLArm.hp&gt;0)
        {
            if(hudLArm.temperature&gt;=hudLArm.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,209+view_xview[view_current],410+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else if(hudLArm.temperature&lt;=hudLArm.freezingPoint)
            {
                draw_sprite_ext(spr_dial,0,209+view_xview[view_current],410+view_yview[view_current],1,1,180-random(2),c_white,1);
            }
            else
            {
                if(hudLArm.temperature&gt;0)
                    draw_sprite_ext(spr_dial,0,209+view_xview[view_current],410+view_yview[view_current],1,1,90*(1-hudLArm.temperature/hudLArm.meltingPoint),c_white,1);
                else
                    draw_sprite_ext(spr_dial,0,209+view_xview[view_current],410+view_yview[view_current],1,1,90*(1+hudLArm.temperature/hudLArm.freezingPoint),c_white,1);
            }
        }
        else
        {
            draw_sprite_ext(spr_dial,0,209+view_xview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        }
        
        // ----------- Right Arm -------------
        if(hudRArm.hp&gt;0)
        {
            if(hudRArm.temperature&gt;=hudRArm.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,209+view_xview[view_current],455+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else if(hudRArm.temperature&lt;=hudRArm.freezingPoint)
            {
                draw_sprite_ext(spr_dial,0,209+view_xview[view_current],455+view_yview[view_current],1,1,180-random(2),c_white,1);
            }
            else
            {
                if(hudRArm.temperature&gt;0)
                    draw_sprite_ext(spr_dial,0,209+view_xview[view_current],455+view_yview[view_current],1,1,90*(1-hudRArm.temperature/hudRArm.meltingPoint),c_white,1);
                else
                    draw_sprite_ext(spr_dial,0,209+view_xview[view_current],455+view_yview[view_current],1,1,90*(1+hudRArm.temperature/hudRArm.freezingPoint),c_white,1);
            }
        }
        else
        {
            draw_sprite_ext(spr_dial,0,209+view_xview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        }
    
        //-------------------------------------------------------------
        //                   Health Monitor
        //-------------------------------------------------------------
    
        if(hudHead.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,0,280+view_xview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudHead.hp/100),1);
        }
        if(hudBody.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,1,280+view_xview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudBody.hp/100),1);
        }
        if(hudLArm.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,2,280+view_xview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudLArm.hp/100),1);
        }
        if(hudRArm.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,3,280+view_xview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudRArm.hp/100),1);
        }
        if(hudLeg.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,4,280+view_xview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudLeg.hp/100),1);
        }
    
        //-------------------------------------------------------------
        //                      Energy Bars
        //-------------------------------------------------------------
    
        draw_rectangle_color(402+view_xview[view_current],446+view_yview[view_current]-0.86*hudLArm.energy,413+view_xview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        draw_rectangle_color(418+view_xview[view_current],446+view_yview[view_current]-0.86*hudRArm.energy,429+view_xview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        if(hudLeg.hover=1)
        {
            draw_rectangle_color(434+view_xview[view_current],446+view_yview[view_current]-0.86*hudLeg.energy,445+view_xview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        }
        else
        {
            draw_set_color(c_black);
            draw_rectangle(434+view_xview[view_current],360+view_yview[view_current],445+view_xview[view_current],446+view_yview[view_current],false);
        }
        
        if(hudBody.useEnergy=1)
        {
            draw_rectangle_color(450+view_xview[view_current],446+view_yview[view_current]-0.86*hudBody.energy,461+view_xview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        }
        else
        {
            draw_set_color(c_black);
            draw_rectangle(450+view_xview[view_current],360+view_yview[view_current],461+view_xview[view_current],446+view_yview[view_current],false);
        }
        
        //-------------------------------------------------------------
        //                      Console Log
        //-------------------------------------------------------------
        draw_set_color(c_black);
        draw_rectangle(501+view_xview[view_current],360+view_yview[view_current],618+view_xview[view_current],467+view_yview[view_current],false);
        draw_set_font(fontDosBig);
        draw_set_color(c_lime);
        for(i=0;i&lt;=10;i+=1;)
        {
            draw_text(504+view_xview[view_current],456+view_yview[view_current]-10*i,message[i]);
        }        
        
    }
    else //No Head
    {
        draw_sprite_ext(spr_dial,0,129+view_xview[view_current],432+view_yview[view_current],1.4,1.4,180,c_white,1);
        draw_sprite_ext(spr_dial,0,49+view_xview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        draw_sprite_ext(spr_dial,0,49+view_xview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        draw_sprite_ext(spr_dial,0,209+view_xview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        draw_sprite_ext(spr_dial,0,209+view_xview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        
        if(hudBody.electricity&gt;10)
        {
            draw_sprite_ext(spr_static,irandom(7),view_xview[view_current],view_yview[view_current],1,1,0,c_white,0.1*hudBody.electricity/100);
        }
        else
        {
            draw_sprite_ext(spr_static,irandom(7),view_xview[view_current],view_yview[view_current],1,1,0,c_white,0.1);
        }
                
    }
    //-------------------------------------------------------------
    //                      Dashboard
    //-------------------------------------------------------------
    
    if(hudBody.temperature &gt; 0)
    {
        if(hudBody.temperature&lt;hudBody.meltingPoint)
        {
            draw_sprite_ext(spr_hud,0,0+view_xview[view_current],352+view_yview[view_current],1,1,0,merge_color(c_white,c_red,(hudBody.temperature/hudBody.meltingPoint)),1);
            draw_sprite_ext(spr_heat,0,0+view_xview[view_current],0+view_yview[view_current],1,1,0,c_red,hudBody.temperature/hudBody.meltingPoint);
        }
        else
        {
            draw_sprite_ext(spr_hud,0,0+view_xview[view_current],352+view_yview[view_current],1,1,0,c_red,1);
            draw_sprite_ext(spr_heat,0,0+view_xview[view_current],0+view_yview[view_current],1,1,0,c_red,1);
        }
    }
    else
    {
        if(hudBody.temperature&gt;hudBody.freezingPoint)
        {
            draw_sprite_ext(spr_hud,0,0+view_xview[view_current],352+view_yview[view_current],1,1,0,merge_color(c_white,c_teal,(hudBody.temperature/hudBody.freezingPoint)),1);
            draw_sprite_ext(spr_heat,0,0+view_xview[view_current],0+view_yview[view_current],1,1,0,c_teal,hudBody.temperature/hudBody.freezingPoint);
        }
        else
        {
            draw_sprite_ext(spr_hud,0,0+view_xview[view_current],352+view_yview[view_current],1,1,0,c_teal,1);
            draw_sprite_ext(spr_heat,0,0+view_xview[view_current],0+view_yview[view_current],1,1,0,c_teal,1);
        }
    }
    
    // ---------------------------- Static ------------------------------
    if(hudHead.electricity&gt;0 || hudBody.electricity&gt;0)
    {
        if(hudBody.electricity&gt;hudHead.electricity)
        {
            draw_sprite_ext(spr_static,irandom(7),view_xview[view_current],view_yview[view_current],1,1,0,c_white,0.1*hudBody.electricity/100);
        }
        else
        {
            draw_sprite_ext(spr_static,irandom(7),view_xview[view_current],view_yview[view_current],1,1,0,c_white,0.1*hudHead.electricity/100);
        }
    }
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw HUD Player 2

if(hudBody.player=2)
{
    
    //-------------------------------------------------------------
    //                   Temperature Gauge
    //-------------------------------------------------------------
    
    if(hudHead.hp&gt;0)
    {
        // ----------- Body -------------
        if(hudBody.hp&gt;0)
        {
            if(hudBody.temperature&gt;=hudBody.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,-128+view_xview[view_current]+view_wview[view_current],432+view_yview[view_current],1.4,1.4,random(10),c_white,1);
            }
            else
            {
                draw_sprite_ext(spr_dial,0,-128+view_xview[view_current]+view_wview[view_current],432+view_yview[view_current],1.4,1.4,90*(1-hudBody.temperature/hudBody.meltingPoint),c_white,1);
            }
        }
        else //No Body
        {
                draw_sprite_ext(spr_dial,0,-128+view_xview[view_current]+view_wview[view_current],432+view_yview[view_current],1.4,1.4,180,c_white,1);
        }
        
        // ----------- Head -------------
        if(hudHead.hp&gt;0)//Redundant as there is no Hud without a Head... Here for completeness
        {
            if(hudHead.temperature&gt;=hudHead.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,-208+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else
            {
                draw_sprite_ext(spr_dial,0,-208+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,90*(1-hudHead.temperature/hudHead.meltingPoint),c_white,1);
            }
        }
        else //No Head
        {
            draw_sprite_ext(spr_dial,0,-208+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        }
        
        // ----------- Leg -------------
        if(hudLeg.hp&gt;0)
        {
            if(hudLeg.temperature&gt;=hudLeg.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,-208+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else
            {
                draw_sprite_ext(spr_dial,0,-208+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,90*(1-hudLeg.temperature/hudLeg.meltingPoint),c_white,1);
            }
        }
        else
        {
            draw_sprite_ext(spr_dial,0,-208+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        }
        
        // ----------- Left Arm -------------
        if(hudLArm.hp&gt;0)
        {
            if(hudLArm.temperature&gt;=hudLArm.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,-48+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else
            {
                draw_sprite_ext(spr_dial,0,-48+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,90*(1-hudLArm.temperature/hudLArm.meltingPoint),c_white,1);
            }
        }
        else
        {
            draw_sprite_ext(spr_dial,0,-48+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        }
        
        // ----------- Right Arm -------------
        if(hudRArm.hp&gt;0)
        {
            if(hudRArm.temperature&gt;=hudRArm.meltingPoint)
            {
                draw_sprite_ext(spr_dial,0,-48+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,random(10),c_white,1);
            }
            else
            {
                draw_sprite_ext(spr_dial,0,-48+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,90*(1-hudRArm.temperature/hudRArm.meltingPoint),c_white,1);
            }
        }
        else
        {
            draw_sprite_ext(spr_dial,0,-48+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        }
    
        //-------------------------------------------------------------
        //                   Health Monitor
        //-------------------------------------------------------------
    
        if(hudHead.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,0,-360+view_xview[view_current]+view_wview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudHead.hp/100),1);
        }
        if(hudBody.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,1,-360+view_xview[view_current]+view_wview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudBody.hp/100),1);
        }
        if(hudLArm.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,2,-360+view_xview[view_current]+view_wview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudLArm.hp/100),1);
        }
        if(hudRArm.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,3,-360+view_xview[view_current]+view_wview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudRArm.hp/100),1);
        }
        if(hudLeg.hp&gt;0)
        {
            draw_sprite_ext(spr_healthMonitor,4,-360+view_xview[view_current]+view_wview[view_current],363+view_yview[view_current],1,1,0,merge_color(c_red,c_lime,hudLeg.hp/100),1);
        }
    
        //-------------------------------------------------------------
        //                      Energy Bars
        //-------------------------------------------------------------
    
        draw_rectangle_color(-403+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current]-0.86*hudLArm.energy,-414+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        draw_rectangle_color(-419+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current]-0.86*hudRArm.energy,-430+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        if(hudLeg.hover=1)
        {
            draw_rectangle_color(-435+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current]-0.86*hudLeg.energy,-446+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        }
        else
        {
            draw_set_color(c_black);
            draw_rectangle(-435+view_xview[view_current]+view_wview[view_current],360+view_yview[view_current],-446+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current],false);
        }
        
        if(hudBody.useEnergy=1)
        {
            draw_rectangle_color(-450+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current]-0.86*hudBody.energy,-461+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current],c_lime,c_lime,c_green,c_green,false);
        }
        else
        {
            draw_set_color(c_black);
            draw_rectangle(-450+view_xview[view_current]+view_wview[view_current],360+view_yview[view_current],-461+view_xview[view_current]+view_wview[view_current],446+view_yview[view_current],false);
        }
    
        //-------------------------------------------------------------
        //                      Dashboard
        //-------------------------------------------------------------
        
        if(hudBody.temperature&lt;hudBody.meltingPoint)
        {
            draw_sprite_ext(spr_hudArcade,1,636+view_xview[view_current],352+view_yview[view_current],1,1,0,merge_color(c_white,c_red,(hudBody.temperature/hudBody.meltingPoint)),1);
            draw_sprite_ext(spr_heat,0,0+view_xview[view_current],0+view_yview[view_current],1,1,0,c_red,hudBody.temperature/hudBody.meltingPoint);
        }
        else
        {
            draw_sprite_ext(spr_hudArcade,1,636+view_xview[view_current],352+view_yview[view_current],1,1,0,c_red,1);
            draw_sprite_ext(spr_heat,0,0+view_xview[view_current],0+view_yview[view_current],1,1,0,c_red,1);
        }
        
        if(hudHead.electricity&gt;0 || hudBody.electricity&gt;0)
        {
            if(hudBody.electricity&gt;hudHead.electricity)
            {
                draw_sprite_ext(spr_static,irandom(7),view_xview[view_current],view_yview[view_current],1,1,0,c_white,0.1*hudBody.electricity/100);
            }
            else
            {
                draw_sprite_ext(spr_static,irandom(7),view_xview[view_current],view_yview[view_current],1,1,0,c_white,0.1*hudHead.electricity/100);
            }
        }
    }
    else //No Head
    {
        draw_sprite_ext(spr_dial,0,-130+view_xview[view_current]+view_wview[view_current],432+view_yview[view_current],1.4,1.4,180,c_white,1);
        draw_sprite_ext(spr_dial,0,-50+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        draw_sprite_ext(spr_dial,0,-50+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        draw_sprite_ext(spr_dial,0,-210+view_xview[view_current]+view_wview[view_current],410+view_yview[view_current],1,1,180,c_white,1);
        draw_sprite_ext(spr_dial,0,-210+view_xview[view_current]+view_wview[view_current],455+view_yview[view_current],1,1,180,c_white,1);
        if(hudBody.temperature&lt;hudBody.meltingPoint)
        {
            draw_sprite_ext(spr_hudArcade,1,636+view_xview[view_current],352+view_yview[view_current],1,1,0,merge_color(c_dkgray,c_red,(0.5*hudBody.temperature/hudBody.meltingPoint)),1);
            draw_sprite_ext(spr_heat,0,-0+view_xview[view_current]+view_wview[view_current],0+view_yview[view_current],1,1,0,c_red,hudBody.temperature/hudBody.meltingPoint);
            //draw_sprite_ext(spr_static,random(7),0+view_xview[view_current]+view_wview[view_current],0,1,1,0,c_white,hudBody.temperature/hudBody.meltingPoint);
        }
        else
        {
            draw_sprite_ext(spr_hudArcade,1,636+view_xview[view_current],352+view_yview[view_current],1,1,0,merge_color(c_dkgray,c_red,(0.5)),1);
            draw_sprite_ext(spr_heat,0,-0+view_xview[view_current]+view_wview[view_current],0+view_yview[view_current],1,1,0,c_red,1);
            //draw_sprite_ext(spr_static,random(7),0+view_xview[view_current]+view_wview[view_current],0,1,1,0,c_white,hudBody.temperature/hudBody.meltingPoint);
        }
        if(hudBody.electricity&gt;10)
        {
            draw_sprite_ext(spr_static,irandom(7),view_xview[view_current]+view_wview[view_current],view_yview[view_current],1,1,0,c_white,0.1*hudBody.electricity/100);
        }
        else
        {
            draw_sprite_ext(spr_static,irandom(7),view_xview[view_current]+view_wview[view_current],view_yview[view_current],1,1,0,c_white,0.1);
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
