<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_itemHead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Part Icon with Mouse Interactions

player=1;
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,0,image_blend,1);
if(unlock[choiceType,choice]=0)
{
    image_index=0;
    image_xscale=0.7;
    image_yscale=0.7;
}
if(unlock[choiceType,choice]=1)
{
    if((choice=headChoice[player-1] &amp;&amp; choiceType=0) || (choice=bodyChoice[player-1] &amp;&amp; choiceType=1) || (choice=lArmChoice[player-1] &amp;&amp; choiceType=2) || (choice=rArmChoice[player-1] &amp;&amp; choiceType=2.5) || (choice=legChoice[player-1] &amp;&amp; choiceType=3))
    {
        image_xscale=1;
        image_yscale=1;
        image_blend=c_white;
    }
    else
    {
        if(position_meeting(mouse_x,mouse_y,self))
        {
            if(mouse_check_button(mb_left))
            {
                image_xscale=0.9;
                image_yscale=0.9;
                image_blend=c_gray;
            }
            else
            {
                image_xscale=1;
                image_yscale=1;
                image_blend=c_white;
            }
            if(mouse_check_button_released(mb_left))
            {
                if(choiceType=0)
                {
                    headChoice[player-1]=choice;
                }
                if(choiceType=1)
                {
                    bodyChoice[player-1]=choice;
                }
                if(choiceType=2)
                {
                    lArmChoice[player-1]=choice;
                }
                if(choiceType=2.5)
                {
                    rArmChoice[player-1]=choice;
                }
                if(choiceType=3)
                {
                    legChoice[player-1]=choice;
                }
            }
        }
        else
        {
            image_xscale=0.7;
            image_yscale=0.7;
            image_blend=c_gray;
        }
    }
}
if(unlock[choiceType,choice]=2)
{
    if(position_meeting(mouse_x,mouse_y,self))
    {
        if(mouse_check_button(mb_left))
        {
            image_xscale=0.9;
            image_yscale=0.9;
            image_blend=c_dkgray;
        }
        else
        {
            image_xscale=1;
            image_yscale=1;
            image_blend=c_gray;
        }
        if(mouse_check_button_released(mb_left))
        {
            if(itemGear&gt;=itemCost[0,choice])
            {
                unlock[choiceType,choice]=1;
                itemGear-=itemCost[0,choice];
                if(choiceType=0)
                {
                    headChoice[player-1]=choice;
                }
                if(choiceType=1)
                {
                    bodyChoice[player-1]=choice;
                }
                if(choiceType=2)
                {
                    lArmChoice[player-1]=choice;
                }
                if(choiceType=2.5)
                {
                    rArmChoice[player-1]=choice;
                }
                if(choiceType=3)
                {
                    legChoice[player-1]=choice;
                }
            }
        }
    }
    else
    {
        image_xscale=0.7;
        image_yscale=0.7;
        image_blend=c_dkgray;
    }
    draw_sprite(spr_item,0,x+7,y+7);
    draw_set_font(fontDosBig);
    draw_text(x+7,y+7,itemCost[0,choice]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
