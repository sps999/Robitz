<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rArm01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>obj_playerCollisions</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Periodic Sound Effects Timer

// ================================================
//     Weapon Sound effects for interval times
// ================================================


// Pellet Shooter Charge
if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=1) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=1))
{
    if(energy&lt;5)
    {
        sound_play(snd_charge1);
    } else
    if((attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button(mb_left)))) || (attached.player=2 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button(mb_left)))))
    {
        sound_play(snd_charge2);
    }
}

// Flamethrower Flames
if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=2) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=2))
{
    if(instance_number(obj_fire)&lt;=800)
    {
        sound_volume(snd_fire,0.5+0.5*(instance_number(obj_fire)/800));
    } else sound_volume(snd_fire,1);
    sound_play(snd_fire);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Arm Properties
hp=100;
temperature=21; //Base Temperature
electricity=0;
frost=1;
image_speed=0;
image_index=0;
subAttack=1;

    /* Choice[0] of RArm effects properties and material
    
    Materials:
    
    Element - #     (Hardness, Melt, Heat, Density, Conductivity):
    
    Magnesium - 1  (260, 650, 160, 1738, 23)
    Aluminium - 5  (245, 660, 235, 2700, 38)
    Titanium - 4   (716, 1668, 22, 4507, 2.5)
    Chromium - 3   (1120, 1907, 94, 7140, 7.9)
    Iron - 7       (490, 1538, 80, 7874, 10)
    Nickel - 6     (700, 1455, 91, 8908, 14)
    Copper - 2     (874, 1085, 400, 8920, 59)
    Zinc - 8       (412, 420, 120, 7140, 17)
    
    Material Properties are listed in scr_material 
    
    script_execute(scr_material,material); */
    
//-----------------------------------------------------
//                  Arm Choice[0]
//-----------------------------------------------------

// Shooter Arm: Charge Shot
if((object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=1) || (object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=1))
{
    if(object_index=obj_lArm) sprite_index=spr_lArm01; else sprite_index=spr_rArm01;
    script_execute(scr_material,1);
    volume=0.159; //Temp
    attackNumber=1;
    baseEnergyRegen=999;
    baseActiveEnergyRegen=0;
    subEnergyCost1=2;
}

// Flamethrower Arm: Flames and gasoline shots
else if((object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=2) || (object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=2))
{
    if(object_index=obj_lArm) sprite_index=spr_lArm02; else sprite_index=spr_rArm02;
    script_execute(scr_material,2);
    volume=0.192; //Temp
    attackNumber=2;
    baseEnergyRegen=2;
    baseActiveEnergyRegen=0.5;
    image_speed=30;
    subEnergyCost1=1;
    subEnergyCost2=1;
}

// Turtle Arm: Shields
else if((object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=3) || (object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=3))
{
    if(object_index=obj_lArm) sprite_index=spr_lArm01; else sprite_index=spr_rArm01;
    script_execute(scr_material,3);
    volume=0.140; //Temp
    attackNumber=1;
    baseEnergyRegen=1;
    baseActiveEnergyRegen=0;
    subEnergyCost1=1;
}

// Biker Arm: Drills
else if((object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=4) || (object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=4))
{
    if(object_index=obj_lArm) sprite_index=spr_lArm04; else sprite_index=spr_rArm04;
    script_execute(scr_material,4);
    volume=0.2; //Temp
    attackNumber=1;
    baseEnergyRegen=2;
    baseActiveEnergyRegen=0;
    subEnergyCost1=1;
}

// Electric Arm: Grapple
else if((object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=5) || (object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=5))
{
    if(object_index=obj_lArm) sprite_index=spr_lArm05; else sprite_index=spr_rArm05;
    script_execute(scr_material,5);
    volume=0.2; //Temp
    attackNumber=1;
    baseEnergyRegen=0;
    baseActiveEnergyRegen=0;
    subEnergyCost1=1;
}

// Magnet Arm: Magnet Ball
else if((object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=6) || (object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=6))
{
    if(object_index=obj_lArm) sprite_index=spr_lArm06; else sprite_index=spr_rArm06;
    script_execute(scr_material,6);
    volume=0.2; //Temp
    attackNumber=1;
    baseEnergyRegen=2;
    baseActiveEnergyRegen=2;
    subEnergyCost1=20;
}

else //Standard Null Arm
{
    if(object_index=obj_lArm) sprite_index=spr_lArm01; else sprite_index=spr_rArm01;
    script_execute(scr_material,1);
    volume=0.159; //Temp
    attackNumber=1;
    baseEnergyRegen=999;
    baseActiveEnergyRegen=0;
    subEnergyCost1=2;
}
//-----------------------------------------------------
//                  Arm Setup
//-----------------------------------------------------
maxEnergy=100;
energy=maxEnergy;
energyRegen=baseEnergyRegen*(1-0.9*temperature/meltingPoint); //When this formula is added to, remember to update the Step Event ones
mass=(density*volume);
image_blend = c_material; //Might not be necessary
energyCost=subEnergyCost1;
hitDirection=90;
hitSpeed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Arm Rotation and Flipping

direction=point_direction(attached.x,attached.y,attached.myCross.x,attached.myCross.y)
image_angle=direction;

// Flip arms when facing Left, and darken back arm
if(attached.myCross.x&lt;attached.x-xOffset)
{
    image_angle+=180;
    if(object_index=obj_lArm)
    {
        depth = -2;
        image_blend = merge_colour(image_blend, c_black, 0);
    }
    else
    {
        depth = 2;
        image_blend = merge_colour(image_blend, c_black, 0.5);
    }
}
else
{
    if(object_index=obj_lArm)
    {
        depth = 2;
        image_blend = merge_colour(image_blend, c_black, 0.5);
    }
    else
    {
        depth = -2;
        image_blend = merge_colour(image_blend, c_black, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_bodyAttachment</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>xOffset</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>yOffset</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_temperature</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage Handling

if(hp&lt;=0 &amp;&amp; sprite_index!=noone)
{
    i=instance_create(x,y,obj_debris);
    i.sprite_index=sprite_index;
    i.direction=attached.direction+random_range(-30,30);
    i.speed=attached.speed+random(10);
    i.image_blend=image_blend;
    i.image_speed=0;
    effect_create_above(ef_explosion,x,y,0.5,c_orange);
    effect_create_above(ef_explosion,x,y,0.5,c_white);
    effect_create_above(ef_firework,x,y,0.5,c_red);
    sprite_index=noone;
    volume=0.1;
    mass=1;
}
if(hp&lt;=0)
{
    subAttack=0;
    energy=0;
    if(attached.hp&gt;0)
    {
        if(object_index=obj_rArm) {effect_create_above(ef_smokeup,x,y,0.5,c_dkgray)} else effect_create_below(ef_smokeup,x,y,0.5,c_black);
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapons

//=====================================================
//               Click Mouse Button
//=====================================================

if((object_index=obj_rArm &amp;&amp; mouse_check_button_pressed(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button_pressed(mb_left)))
// if((object_index=obj_rArm &amp;&amp; gamepad_check_button_pressed(1,4)) || (object_index=obj_lArm &amp;&amp; gamepad_check_button_pressed(1,1)))
//if((attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button_pressed(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button_pressed(mb_left)))) || (attached.player=2 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button_pressed(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button_pressed(mb_left)))))
{
    if(energy&gt;=energyCost)
    {
    
        //-----------------------------------------------------
        //                  Flamethrower
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=2) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=2))
        {
            if(subAttack=1)
            {
                sound_play(snd_fire2);
                if(alarm[1]&lt;1 || alarm[1] &gt; 12)
                {
                    alarm[1]=1;
                }
                
            }
        }
        
        //-----------------------------------------------------
        //                  Energy Shield
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=3) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=3))
        {
            if(subAttack=1)
            {
                i=instance_create(x+(lengthdir_x(20,direction)),y+(lengthdir_y(20,direction)),obj_shield);
                i.attached=id;
                i.team=attached.team; //Stops from shooting self
                i.energy=energy;
                energy=0;
            }
        }
        
        //-----------------------------------------------------
        //                  Drill
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=4) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=4))
        {
            if(subAttack=1)
            {
                i=instance_create(x+(lengthdir_x(20,direction)),y+(lengthdir_y(20,direction)),obj_drill);
                i.attached=id;
                i.team=attached.team; //Stops from shooting self
                i.attack=1;
                energy-=1;
                image_index=1;
            }
        }
        
        //-----------------------------------------------------
        //                  Grapple
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=5) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=5))
        {
            if(subAttack=1 &amp;&amp; energy = 100)
            {
                energy -= 1;
                i=instance_create(x,y,obj_grapple);
                i.direction=direction;
                i.image_angle=direction;
                i.speed=20;
                i.attack=10;
                i.attached=id;
                i.team=attached.team; //Stops from shooting self
                i.depth = depth;
                if(object_index=obj_lArm) i.isLeft = true; else i.isLeft = false;
                image_index=1;
            }
        }
        
        //-----------------------------------------------------
        //                  Magnet
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=6) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=6))
        {
            if(subAttack=1)
            {
                i=instance_create(x+(lengthdir_x(20,direction)),y+(lengthdir_y(20,direction)),obj_magnetBall);
                i.attached=id;
                i.team=attached.team; //Stops from shooting self
                i.attack = 5;
                i.isLaunched=false;
                energy-=energyCost;
            }
        }
    }
    else
    {
        sound_play(snd_click);
    }
}

//=====================================================
//             Hold Mouse Button
//=====================================================

// if((object_index=obj_rArm &amp;&amp; mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button(mb_left)))
// if((object_index=obj_rArm &amp;&amp; gamepad_check_button(1,4)) || (object_index=obj_lArm &amp;&amp; gamepad_check_button(1,1)))
if((attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button(mb_left)))) || (attached.player=2 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button(mb_left)))))
{
    energyRegen=baseActiveEnergyRegen*(1-0.9*temperature/meltingPoint); //If Click-Shooter, set baseActiveRegen to the same value as baseRegen
    if(energy&gt;=energyCost)
    {
    
        //-----------------------------------------------------
        //              Pellet Shooter Charge
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=1) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=1))
        {
            if(meltingPoint&gt;temperature)
            {
                energy+= (-1*energyCost) + (temperature/meltingPoint);
            }
            if(energy&lt;=0)
            {
                energy=0;
                alarm[1]=1; // Charge Sound
            } 
            else if(alarm[1]&lt;1 || alarm[1] &gt; 6+(energy/maxEnergy))
            {
                alarm[1]=6+(energy/maxEnergy);
                image_blend=c_silver;
            }
            
            if(temperature&lt;2000+500*(maxEnergy-energy))
            {
                temperature+=(-0.005/heatResist)*(temperature-(2000+200*(maxEnergy-energy))); //Temporary Values
            }
            if(alarm[1]&lt;=0)
            {
                alarm[1]=6;
            }
            
        }
        
        //-----------------------------------------------------
        //                  Flamethrower
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=2) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=2))
        {
            energy-=energyCost;
            //----------------Flamethrower----------------
            if(subAttack=1)
            {
                i=instance_create(x+(lengthdir_x(16,direction)),y+(lengthdir_y(16,direction)),obj_fire);
                i.direction=direction+random_range(-10,10);
                i.speed=10;
                i.temperature=1200;
                
                // Sound Effect
                if(alarm[1]&lt;1 || alarm[1] &gt; 10)
                {
                    alarm[1]=10;
                }
            }
            
            //--------------------Oil----------------------
            if(subAttack=2)
            {
                if(not collision_line(x,y,x+(lengthdir_x(16,direction)),y+(lengthdir_y(16,direction)),obj_block,true,true))
                {
                    i=instance_create(x+(lengthdir_x(16,direction)),y+(lengthdir_y(16,direction)),obj_oil);
                    i.direction=direction+random_range(-10,10);
                    i.speed=10;
                }
            }
        }
        //-----------------------------------------------------
        //                  Drill Energy Cost
        //-----------------------------------------------------
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=4) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=4))
        {
            energy-=energyCost;
        }
    }
}
//=====================================================
//                Release Mouse Button
//=====================================================

//-----------------------------------------------------
//                  Pellet Shooter
//-----------------------------------------------------

if(electricity&lt;=0 &amp;&amp; attached.electricity&lt;=0)
{
    // if(((object_index=obj_rArm &amp;&amp; mouse_check_button_released(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button_released(mb_left))))
    // if(((object_index=obj_rArm &amp;&amp; gamepad_check_button_released(1,4)) || (object_index=obj_lArm &amp;&amp; gamepad_check_button_released(1,1))))
    if((attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button_released(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button_released(mb_left)))) || (attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; mouse_check_button_released(mb_right)) || (object_index=obj_lArm &amp;&amp; mouse_check_button_released(mb_left)))))
    {
        if((object_index=obj_rArm &amp;&amp; rArmChoice[attached.player-1]=1) || (object_index=obj_lArm &amp;&amp; lArmChoice[attached.player-1]=1))
        {
            if(subAttack=1)
            {
                i=instance_create(x+(lengthdir_x(12,direction)),y+(lengthdir_y(12,direction)),obj_basicBullet);
                i.direction=direction+random(1.5)-3;
                i.image_angle=direction;
                i.speed=20+0.2*(maxEnergy-energy);
                i.attack=1+0.24*(maxEnergy-energy);
                i.team=attached.team; //Stops from shooting self
                i.image_xscale=1+0.02*(maxEnergy-energy);
                i.image_yscale=1+0.02*(maxEnergy-energy);
                i.x-=hspeed;
                i.y-=vspeed;
                i.temperature=4000+100*(maxEnergy-energy);
                if(temperature&lt;i.temperature)
                {
                    temperature+=(-0.1/heatResist)*(temperature-i.temperature); //Temporary Values
                    temperature-=(-0.05/heatResist)*(temperature-(2000+200*(maxEnergy-energy)));
                }
                if (screenShake&lt;1+0.1*(maxEnergy-energy))
                {
                    screenShake=1+0.1*(maxEnergy-energy);
                }
                attached.vlaunchSpeed+=0.02*(maxEnergy-energy)*sin(degtorad(i.direction))*(1-attached.totalMass/64000);
                attached.hlaunchSpeed-=0.04*(maxEnergy-energy)*cos(degtorad(i.direction))*(1-attached.totalMass/64000);
                
                
                if(maxEnergy-energy&lt;40)
                {
                    sound_play(snd_energygun1);
                }
                else if (maxEnergy-energy&lt;80)
                {
                    sound_play(snd_energygun2);
                }
                else if (maxEnergy-energy&lt;120)
                {
                    sound_play(snd_energygun3);
                }
                else sound_play(snd_energygun4);
                                
                energy=maxEnergy;
            }
        }
    }
}
//=====================================================
//                No Mouse Button
//=====================================================
// if((object_index=obj_rArm &amp;&amp; not mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; not mouse_check_button(mb_left)))
// if((object_index=obj_rArm &amp;&amp; not gamepad_check_button(1,4)) || (object_index=obj_lArm &amp;&amp; not gamepad_check_button(1,1)))
if((attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; not mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; not mouse_check_button(mb_left)))) || (attached.player=2 &amp;&amp;((object_index=obj_rArm &amp;&amp; not mouse_check_button(mb_right)) || (object_index=obj_lArm &amp;&amp; not mouse_check_button(mb_left)))))
{
    energyRegen=baseEnergyRegen*(1-0.9*temperature/meltingPoint);
}
// if(((object_index=obj_rArm &amp;&amp; (keyboard_check_pressed(ord("E")) || keyboard_check_pressed(vk_control))) || (object_index=obj_lArm &amp;&amp; (keyboard_check_pressed(ord("Q")) || keyboard_check_pressed(vk_shift)))) &amp;&amp; subAttack!=0) //Cycle Attacks
if((attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; keyboard_check_pressed(ord("E"))) || (object_index=obj_lArm &amp;&amp; keyboard_check_pressed(ord("Q"))))) || (attached.player=1 &amp;&amp;((object_index=obj_rArm &amp;&amp; keyboard_check_pressed(ord("E"))) || (object_index=obj_lArm &amp;&amp; keyboard_check_pressed(ord("Q")))))) //Cycle Attacks
{
    subAttack+=1;
    if(subAttack&gt;attackNumber)
    {
        subAttack=1;
    }
    switch (subAttack)
    {
    case 1: energyCost=subEnergyCost1; break;
    case 2: energyCost=subEnergyCost2; break;
    case 3: energyCost=subEnergyCost3; break;
    }
}

if(energyRegen&lt;0) //Disallow negative Energy Levels
{
    energyRegen=0;
}
energy+=energyRegen;
if(energy&gt;maxEnergy) //Disallow energy overload
{
    energy=maxEnergy;
}
if(electricity&gt;0 || attached.electricity&gt;0)
{
    energyRegen=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
